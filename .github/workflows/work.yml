name: CI

on:
  push:
    branches: '[A-Z]*'

  workflow_dispatch:

jobs:
  clang-format:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v2
      - run: clang-format-12 --version
      - run: for file in $(find . -name "*.cpp" -or -name "*.c" -or -name ".h"); do diff -u <(cat "$file") <(clang-format-12 "$file") || exit 1; done # TODO: add doctest
  clang-tidy:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get install -y clang-tidy-12
      - run: clang-tidy-12 --version
      - run: clang-tidy-12 $(find . -name "*.cpp" -or -name "*.h")
  cppcheck:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get install -y cppcheck
      - run: cppcheck --version
      - run: cppcheck --language=c++ -DSOME_DEFINE_TO_FIX_CONFIG --enable=all --error-exitcode=1 --inline-suppr $(find . -name '*.cpp')
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    - name: Mount bazel cache
      uses: actions/cache@v1
      with:
        path: "/home/runner/.cache/bazel"
        key: bazel

    - name: Install bazelisk
      run: |
        curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64"
        mkdir -p "${GITHUB_WORKSPACE}/bin/"
        mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
        chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

    - name: Test
      run: |
        "${GITHUB_WORKSPACE}/bin/bazel" test //...

    - name: Build
      run: |
        "${GITHUB_WORKSPACE}/bin/bazel" build //...