# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  clang-format:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v2
      - run: clang-format-12 --version
      - run: for file in $(find . -name "*.cpp" -or -name "*.c" -or -name ".h"); do diff -u <(cat "$file") <(clang-format-12 "$file") || exit 1; done # TODO: add doctest
  clang-tidy:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get install -y clang-tidy-12
      - run: clang-tidy-12 --version
      - run: clang-tidy-12 $(find . -name "*.cpp" -or -name "*.h" -print)
  cppcheck:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: actions/checkout@v2
      - run: sudo apt-get install -y cppcheck
      - run: cppcheck --version
      - run: cppcheck --language=c++ -DSOME_DEFINE_TO_FIX_CONFIG --enable=all --error-exitcode=1 --inline-suppr $(find . -name '*.cpp')
    

#     # Steps represent a sequence of tasks that will be executed as part of the job
#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v2

#       - name: Setup C++ environment
#         # You may pin to the exact commit or the version.
#         # uses: kurocha/setup-cpp@ef637353b9bec350da9c1088b73d2217d2441696
#         uses: kurocha/setup-cpp@v1


#       - name: Mount bazel cache
#         uses: actions/cache@v1
#         with:
#           path: "/home/runner/.cache/bazel"
#           key: bazel

#       - name: Install bazelisk
#         run: |
#           curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64"
#           mkdir -p "${GITHUB_WORKSPACE}/bin/"
#           mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
#           chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

#       - name: Test
#         run: |
#           "${GITHUB_WORKSPACE}/bin/bazel" test //...

#       - name: Build
#         run: |
#           "${GITHUB_WORKSPACE}/bin/bazel" build //...
